import { __decorate, __metadata } from "tslib";
import { property, html } from 'lit-element';
import { DewsFormComponent } from '../base/DewsFormComponent.js';
import template from './numerictextbox.html';
import scss from './numerictextbox.scss';
export class Numerictextbox extends DewsFormComponent {
    constructor() {
        super(...arguments);
        this.title = '';
        this.placeholder = '';
        this.disabled = false;
        this.readonly = false;
        this.required = false;
        this.value = '';
        this.prefix = '';
        this.format = '#,##0.00';
        // @property({ type: Number })
        // decimals: number = 2;
        this.max = 999999999999;
        this.min = -999999999999;
        this.restrict = false;
        this.maxLength = 12;
        this.round = 'round';
        this.val = 0;
        this._step = 1;
        this._disabled = true;
        this._beforeValue = '';
        this.onFocus = new CustomEvent('focus', { detail: { target: '' } });
        this.onChange = new CustomEvent('change', { detail: { target: '' } });
    }
    connectedCallback() {
        super.connectedCallback();
        this.addEventListener('focus', this._onFocus);
        // disabled 와 readonly 중 disabled 를 우선 처리한다.
        if (this.disabled && this.readonly) {
            this.readonly = false;
        }
        else if (this.readonly) {
            this._disabled = false;
        }
        // numericbox-button 자식요소가 있으면 step을찾아 버튼 셋팅
        this._numericButton();
        this._title =
            this.title == undefined
                ? html `<label class="undefined" for="numeric-box">undefined</label>`
                : html `<label for="numeric-box">${this.title}</label>`;
    }
    disconnectedCallback() {
        super.disconnectedCallback();
        this.removeEventListener('focus', this._onFocus);
    }
    _beforeInput(e) {
        var _a;
        this._beforeValue = e.target.value;
        this.value = Number((_a = e.target) === null || _a === void 0 ? void 0 : _a.value);
        // 숫자 및 - . 입력처리
        if ((/\d/.exec(e.data) == null && e.data != null && e.data != '.' && e.data != '-') ||
            (e.target.value.replace('.', '').replace('-', '').length >= this.maxLength &&
                e.data != null &&
                e.data != '-' &&
                e.data != '.')) {
            e.returnValue = false;
        }
    }
    _numericButton() {
        var _a, _b, _c;
        if (((_a = this.children[0]) === null || _a === void 0 ? void 0 : _a.localName) === 'numericbox-button') {
            if (((_b = this.children[0]) === null || _b === void 0 ? void 0 : _b.getAttribute('step')) != undefined) {
                this._step = Number((_c = this.children[0]) === null || _c === void 0 ? void 0 : _c.getAttribute('step'));
            }
            this._button = html `
        <span class="stepper">
          <button class="btn-tmp" @click="${this._stepperDecrement}">-</button>
          <button class="btn-tmp" @click="${this._stepperIncrement}">+</button>
        </span>
      `;
        }
    }
    _stepperIncrement() {
        const $input = this.shadowRoot.querySelectorAll('input');
        if (Number($input[1].value) + this._step > this.max) {
            return;
        }
        $input[1].value = (Number($input[1].value) + this._step).toString();
        $input[0].value = this.numberWithCommas($input[1].value);
    }
    _stepperDecrement() {
        const $input = this.shadowRoot.querySelectorAll('input');
        if (Number(this.value) + this._step < this.min) {
            return;
        }
        $input[1].value = (Number($input[1].value) - this._step).toString();
        $input[0].value = this.numberWithCommas($input[1].value);
    }
    _onFocus() {
        // this.onFocus.detail.target = e.target;
        // this.dispatchEvent(this.onFocus);
    }
    _inputChange(e) {
        const $el = e.target;
        const regex = /[^0-9]/g;
        if ($el.value.replace(regex, '') === '') {
            $el.value = this._beforeValue;
        }
        if (e.data == '-') {
            $el.value = (-this.value).toString();
        }
        // 최대값 최소값 처리
        if (Number($el === null || $el === void 0 ? void 0 : $el.value) > this.max || Number($el === null || $el === void 0 ? void 0 : $el.value) < this.min) {
            $el.value = this.value.toString();
        }
    }
    _focusIn() {
        if (this.disabled || this.readonly) {
            return;
        }
        const $spanView = this.shadowRoot.querySelector('span.view');
        const $spanMask = this.shadowRoot.querySelector('span.mask');
        $spanView.style.display = 'none';
        $spanMask.style.display = 'block';
        this.shadowRoot.querySelectorAll('input')[1].focus();
    }
    _focusBlur() {
        const $spanView = this.shadowRoot.querySelector('span.view');
        const $spanMask = this.shadowRoot.querySelector('span.mask');
        const $input = this.shadowRoot.querySelectorAll('input');
        $spanView.style.display = 'block';
        $input[0].value = this.numberWithCommas($input[1].value);
        $spanMask.style.display = 'none';
    }
    numberWithCommas(num) {
        this.value = Number(num);
        const decimalLength = this.format.split('.')[1].length; // 소수점
        const commaPosition = this.format.split('.')[0].split(',')[1].length; // 콤마 위치
        // 반올림 처리
        switch (this.round) {
            case 'round': {
                num = (Math.round(Number(num) * Math.pow(10, decimalLength)) / Math.pow(10, decimalLength)).toString();
                break;
            }
            case 'ceil': {
                num = (Math.ceil(Number(num) * Math.pow(10, decimalLength)) / Math.pow(10, decimalLength)).toString();
                break;
            }
            case 'floor': {
                num = (Math.floor(Number(num) * Math.pow(10, decimalLength)) / Math.pow(10, decimalLength)).toString();
                break;
            }
        }
        const numAraay = num.toString().split('.');
        if (numAraay[0].length <= commaPosition) {
            return num;
        }
        const count = Math.ceil(numAraay[0].length / commaPosition);
        const newNum = [];
        for (let i = 0; i < count; i++) {
            newNum.unshift(numAraay[0].slice(-commaPosition * (i + 1), numAraay[0].length - commaPosition * i));
        }
        newNum.join(',');
        if (numAraay.length == 2) {
            if (numAraay[1].length > decimalLength) {
                return newNum.join(',') + '.' + numAraay[1].slice(0, decimalLength).toString();
            }
            return newNum.join(',') + '.' + numAraay[1].toString();
        }
        else {
            return newNum.join(',');
        }
    }
    render() {
        return template.call(this);
    }
}
Numerictextbox.styles = scss;
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "title", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "placeholder", void 0);
__decorate([
    property({ type: Boolean, reflect: true }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "disabled", void 0);
__decorate([
    property({ type: Boolean, reflect: true }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "readonly", void 0);
__decorate([
    property({ type: Boolean, reflect: true }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "required", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "value", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "prefix", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "suffix", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "format", void 0);
__decorate([
    property({ type: Number }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "max", void 0);
__decorate([
    property({ type: Number }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "min", void 0);
__decorate([
    property({ type: Boolean, attribute: 'restrict-decimals', reflect: true }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "restrict", void 0);
__decorate([
    property({ attribute: 'max-length' }),
    __metadata("design:type", Object)
], Numerictextbox.prototype, "maxLength", void 0);
__decorate([
    property({ type: String }),
    __metadata("design:type", String)
], Numerictextbox.prototype, "round", void 0);
//# sourceMappingURL=data:application/json;base64,